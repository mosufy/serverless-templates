service:
  name: sls-tpl-api-lite

plugins:
  - serverless-webpack
  - serverless-api-compression
  - serverless-offline
  - serverless-plugin-optimize
  - serverless-plugin-log-retention
  - serverless-dotenv-plugin

package:
  individually: true

provider:
  name: aws
  runtime: nodejs10.x
  memorySize: ${env:AWS_LAMBDA_MEMORY_SIZE, 128}
  timeout: ${env:AWS_LAMBDA_TIMEOUT, 3}
  stackName: ${self:service}-${self:provider.stage}
  apiName: ${self:provider.stackName}
  stage: ${opt:stage, 'local'}
  profile: ${env:AWS_ACCOUNT_PROFILE}
  region: ${opt:region, env:AWS_ACCOUNT_REGION, 'us-west-1'}
  apiKeys:
    - usagePlan:
        - name: ${self:provider.stackName}-apiKey
          value: ${env:AWS_APIGATEWAY_SECRET_KEY}
  usagePlan:
    - usagePlan:
  stackTags:
    SITE: shared
    PRODUCT: ${self:service}
    STAGE: ${self:provider.stage}

custom:
  path:
    app: src
    functions: config/functions
    resources: config/resources
  serverless-offline:
    port: 8181
  webpack:
    packager: yarn
  logRetentionInDays: ${env:AWS_LOG_RETENTION_DAYS, 7}
  contentEncoding:
    contentCompression: ${env:AWS_APIGATEWAY_COMPRESSION_MAX_BYTES, 100}
  http:
    cors: ${file(config/utils/cors.yml)}
  dotenv:
    basePath: config/environments/

# Add all the functions here
functions:
  - ${file(${self:custom.path.functions}/ping.yml)}

# Add all the additional resources here
resources:
  #- ${file(${self:custom.path.resources}/service.yml)}
